Export

Export MODX elements and objects from the MODX database into your repository as files.  
These files can later be imported into a new installation using the "seed" command.
For Elements (Snippets, Chunks, Templates, Plugins, and TVs), this will create a static 
version of the Element with the source content in your local repository.  For other 
objects (e.g. System Settings), this will save a copy of the object as an array in your 
local repository. 


Usage:

    php repoman export <pkg_root_dir> --classname=<classname> --target=<model/seeds/>
    

Options:

    --classname (string, required) 
        Required: you must specify which type of object you are exporting.

    --target (string, required)
        Specify which seed directory where your exported files will be written, relative to your project root.

    --where (json, optional)
        This parameter allows you to specify the search criteria for your export. If omitted, getCollection
        is run without any filter parameters.

    --move (boolean, optional)
        Affects only elements: if set, the original element will be updated to be a static element
        with its source in the new location.  If not set, a "snapshot" copy of the element is created
        and the original is left untouched.
        
    --package (string, optional)
        Syntax is a colon-sparated string:
            <model>:model/:<tableprefix>
        It's recommended that you instead set the "packages" array in your composer.json. See example below.
        If you have customized the "orm_path" setting, make sure the paths here reflect that!

    --limit (integer, optional)
        Because recordsets may be large, seed files are limited to a given number of records.  If you find
        that too many seed files are being created, then increase this number.  If your records are so large
        that PHP is having a hard time writing or slurping the files, decrease this number.
        Default: 50
        
    --debug (boolean, default false)
        If set, no action is taken, but the raw SQL query will be returned including a list
        of results found.


Because it is laborious to pass the package parameter via the command-line, it is recommended that you set the 
"packages" array in your composer.json, e.g. 

    "packages":[
        {
            "pkg":"moxycart",
            "path":"model/",
            "table_prefix": "moxy_"
        }
    ]


Examples:

Exporting a template:
        
    php repoman export /path/to/my/repo --classname=modTemplate '--where={"templatename":"Home Page"}' --target=model/seeds/dev

Exporting Multiple Templates by name:

    php repoman export /path/to/my/repo --classname=modTemplate '--where={"templatename:IN":["Home Page","Contact"]}' --target=model/seeds/dev

Exporting a Plugin with its events:

    php repoman export /path/to/my/repo --classname=modPlugin '--graph={"Events":{}}' '--where={"name":"Bloodline"}' --target=model/seeds/prod


See Also: http://rtfm.modx.com/xpdo/2.x/class-reference/xpdoquery/xpdoquery.where