Export

Export MODX elements and objects from MODX into your repository.  This functionality 
exists so you can grab existing MODX data and make it a part of your package.  For Elements
(Snippets, Chunks, Templates, Plugins, and TVs), this will create a static version of the
Element with the source content in your local repository.  For other objects (e.g. System
Settings), this will save a copy of the object as an array in your local repository. 

Once the  data is stored inside your local repository, you can version control it or build
packages from it using Repoman.

Usage:

    php repoman.php export <pkg_root_dir> --classname=<classname> --where=<json_criteria>
    

Options:

    --classname (string) 
        Required: you must specify which type of object you are exporting.

    --where (json)
        This parameter allows you to specify the search criteria for your export. If omitted, getCollection
        is run without any filter parameters.

    --move (boolean, default false)
        Affects only elements: if set, the original element will be updated to be a static element
        with its source in the new location.  If not set, a "snapshot" copy of the element is created
        and the original is left untouched.
        
    --target (string, required)
        Specify which seed directory where your exported files will be written, relative to your seeds_dir.
        
    --package (string)
        Syntax is a colon-sparated string:
            <model>:/path/to/core/components/<namespace>/model/:<tableprefix>
        It's recommended that you instead set the "packages" array in your config.php. See example below.

    --limit (integer)
        Because recordsets may be large, seed files are limited to a given number of records.  If you find
        that too many seed files are being created, then increase this number.  If your records are so large
        that PHP is having a hard time writing or slurping the files, decrease this number.
        Default: 50
        
    --debug (boolean, default false)
        If set, no action is taken, but the raw SQL query will be returned including a list
        of results found.


Because its laborious to pass the package parameter via the command-line, it's recommended that you set the 
"packages" array in your package config.php, e.g.

    return array(
        // ... etc ...
        'packages' => array(
            array('model1', $pkg_root_dir.'/core/components/mynamespace/model/','pre1_'),
            array('model2', $pkg_root_dir.'/core/components/mynamespace/model/','pre2_'),
        ),

    );



Examples:

Exporting a template:
        
    php repoman.php export /path/to/my/repo --classname=modTemplate '--where={"templatename":"Home Page"}' --target=dev

Exporting Multiple Templates by name:

    php repoman.php export /path/to/my/repo --classname=modTemplate '--where={"templatename:IN":["Home Page","Contact"]}' --target=dev

Exporting a Plugin with its events:

    php repoman.php export /path/to/my/repo --classname=modPlugin '--graph={"Events":{}}' '--where={"name":"Bloodline"}' --target=prod


See Also: http://rtfm.modx.com/xpdo/2.x/class-reference/xpdoquery/xpdoquery.where