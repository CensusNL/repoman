Schema

This function handles two tasks related to reading and writing XML schema files
and generating the corresponding PHP classes. The behavior is controlled by the 
"action" parameter.  This functionality is only useful to developers who are 
manipulating the database structure.


Write Mode

Write an XML schema file based off of existing database tables, usually identified
by their name prefix.  This corresponds to the writeSchema() method inside the xPDO 
generator class.  xPDO does not detect foreign key relationships: you will have 
to modify your XML file to define the aggregate and composite relationships 
between your tables.


Parse Mode

Parse an existing XML schema file and generate the corresponding PHP classes.
These classes are the basis of xPDO's ORM. This corresponds to the parseSchema() 
method of the xPDO generator class.


Options

--action : (required) write|parse 
    Specifies whether to write an XML schema file or to parse one.

--model : (string, optional) 
    Specifies which schema file inside of model/schema/ to parse and which sub-folder inside of 
    model/ will contain the created class files. If omitted, the package namespace will be assumed.

--table_prefix : (string, optional)
    The table name prefix used to identify a sub-set of tables.

--overwrite (mixed, optional) 
    This controls how conflicting files are handled. If not set (i.e. overwrite is false), then 
    the script behaves cowardly and will exit if any conflict is detected.
    overwrite=polite | overwrite=true will attempt to rename any conflicting files with a name
    corresponding to the Unix timestamp.
    overwrite=force will delete any conflicting files. Use with extreme caution!
    Default: false.

--restrict_prefix : (boolean, optional) Normally you want to only write schema corresponding to the 
    tables with the given table_prefix, but you can ignore this restriction by setting this to false.
    Default: true.

--dir_perms : (optional) the permissions mask to use if it is necessary to create directories.
    The global default is 0777, and it should rarely need to be changed: permissions are best
    left defined by the parent environment not forced by a script.


Examples:

Write an XML schema file from all database tables whose names begin with "mypre_":

    php repoman.php schema <pkg_root_dir> --action=write --table_prefix=mypre_ --model=mypkg

Parse the XML file located at model/schema/mypre.mysql.schema.xml into classfiles.

    php repoman.php schema <pkg_root_dir> --action=parse --table_prefix=mypre_ --model=mypkg    

Attempt to rename files during the operation:

    php repoman.php schema <pkg_root_dir> --action=parse --table_prefix=mypre_ --model=mypkg    